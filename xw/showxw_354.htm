 
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>New Page 1</title>
</head>

<body>

<p align="center"> <font size="6" face="宋体" color="#FF0000"> authware函数应用 </font><font face="宋体"> 
  </font></p>
<hr>
<table>
<tr><td>
 类别 <br><br> 使用格式及说明 <br><br>ABS（） <br><br> Math <br><br> 格式：number := ABS(x)<br><br>说明：返回x的绝对值 <br><br>ACOS（） <br><br> Math <br><br> 格式：number := ACOS(x)<br><br>说明：返回x的反余弦函数值，x的值的范围为0～Pi。 <br><br>AddLinear <br><br> List <br><br> 格式：AddLinear(linearList, value [, index])<br><br>说明：该函数的作用是将Value插入到Linearlist（线型列表）中。<br><br>如果该线型列表是一个有序的列表，则Value被按照一定的规则插入到合适的位置；<br><br>如果该列表为一个无序的列表，则将Value插入的列表的最后；<br><br>如果index的值为1，则Valve被插入到列表第一个；<br><br><br><br>如果index的值超个列表中的个数，则越界的个数用零补全，然后再插入Value。例如：<br><br><br><br>1：numList:=[1, 2, 3]<br><br><br><br>AddLinear(numList, 99, 1)<br><br><br><br>numList 的结果是[99, 1, 2, 3]<br><br><br><br>2：numList:=[1, 2, 3]<br><br><br><br>AddLinear(numList, 99, 6)<br><br><br><br>NumList is now [1, 2, 3, 0, 0, 99] <br><br> <br><br>AddProperty <br><br> List <br><br> 格式：AddProperty(propertyList, #property, value [, index])<br><br><br><br>说明：该函数的作用是将属性或值插入到属性列表中。例如：<br><br><br><br>1：propList:=[#a:1,#b:2,#c:3]<br><br><br><br>AddProperty(propList, #d, 99, 1)<br><br><br><br>PropList 为： [#d:99, #a:1, #b:2, #c:3]<br><br><br><br>2：propList:=[#a:1,#b:2,#c:3]<br><br><br><br>AddProperty(propList, #d, 99, 6)<br><br><br><br>propList 为： [#a:1, #b:2, #c:3, #d:99] <br><br> <br><br>AppendExtFile <br><br> File <br><br> 格式：number := AppendExtFile(&quot;filename&quot;, &quot;string&quot;)<br><br><br><br>说明：该函数将字符串中的值插入到一个文件的末尾。<br><br><br><br>例如：<br><br><br><br>AppendExtFile(RecordsLocation^&quot;DATA.TXT&quot;, NewUser)，将新的字符串NewUser加入到DATA.TXT中。 <br><br> <br><br>Application <br><br> Platform <br><br> 格式：string := Application()<br><br><br><br>说明：该函数的返回值为COA加上一个空格，它是 <br><br> <br><br>Application <br><br> Platform <br><br> Authorware的源文件名。<br><br><br><br>某些XCMDs 和 DLLs需要来决定Authorware是否正在运行。 <br><br> <br><br>ArrayGet <br><br> Math <br><br> 格式：result := ArrayGet(n)<br><br><br><br>说明：读取一个排列中的第n个单元，并将它赋给变量result，该单元可以是一个字符串或数字。 <br><br> <br><br>Array（） <br><br> Math <br><br> 格式：MyArray := Array(value, dim1 [, dim2, dim3, ...dim10])<br><br><br><br>说明：该函数用来创建一个列表，可以为多维的列表的创建。例如：<br><br><br><br>我们创建一个三维的列表：<br><br><br><br>MyArray :=Array(0,4,3,2)<br><br><br><br>结果是： [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0] <br><br> <br><br>ArraySet(n, value) <br><br> Math <br><br> 格式：ArraySet(n, value)<br><br><br><br>说明：将Value的值插入到一个排列列表中第n的位置。 <br><br> <br><br>ASIN <br><br> Math <br><br> 格式：number := ASIN(x)<br><br><br><br>说明：计算x的反正弦值， <br><br> <br><br>ATAN <br><br> Math <br><br> 格式：number := ATAN(x)<br><br><br><br>说明：计算x的反正切值 <br><br> <br><br>Average <br><br> Math <br><br> 格式：Value := Average(anyList)<br><br><br><br>Value := Average(a [, b, c, d, e, f, g, h, i, j])<br><br><br><br>说明：取得参数列表中各参数的平均值，<br><br><br><br>例如：<br><br><br><br>1：numList := [1, 2, 3, 99]<br><br><br><br>Value:= Average(numList)<br><br><br><br>Value 的值为 26.<br><br><br><br>2：Value:= Average(1, 2, 3, 99)<br><br><br><br>Value is 26. <br><br> <br><br>Beep() <br><br> General <br><br> 格式：Beep()<br><br><br><br>说明：使系统响铃 <br><br> <br><br>Box（） <br><br> Graphics <br><br> 格式：Box(pensize, x1, y1, x2, y2)<br><br><br><br>说明：该函数用来在（x1，y1），（x2，y2）两点中间绘制一个方框，方框的线型粗细由pensize参数决定，线型默认的颜色为黑色，方框默认为无填充色，使用SetFrame和SetFill<br><br><br><br>函数来设置线型的颜色和填充色。 <br><br> <br><br>CallIcon <br><br> General <br><br> 格式：<br><br><br><br>result := CallIcon(IconID@&quot;SpriteIconTitle&quot;, #method [, argument...])<br><br><br><br>说明：该函数用来调用带有sprite Xtra功能的进程。 <br><br> <br><br>CallObject <br><br> General <br><br> 格式：<br><br><br><br>result := CallObject(&quot;object&quot;, #method [, argument...])<br><br><br><br>说明：该函数调用一个对象的scripting Xtra句柄，我们可以使用NewObject来创建一个新的对象。 <br><br> <br><br>CallParentObject <br><br> General <br><br> 格式：<br><br><br><br>result := CallParentObject(&quot;Xtra&quot;, #method [, argument...])<br><br><br><br>说明：调用一个具有sprite Xtra的进程。 <br><br> <br><br>CallSprite <br><br> General <br><br> 格式：<br><br><br><br>result := CallSprite(IconID@&quot;SpriteIconTitle&quot;, #method [, argument...])<br><br><br><br>说明：调用一个sprite进程。 <br><br> <br><br>Capitalize <br><br> Character <br><br> 格式：<br><br><br><br>resultString := Capitalize(&quot;string&quot; [, 1])<br><br><br><br>说明：该函数的功能是将字符串中每一个单词的首写字母转变成大写字母，Authorware自动分辨单词之间的空格。如果我们需要只转化字符串的第一个单词的第一个字母，可以使用参数“1”。<br><br><br><br>例如：<br><br><br><br>EntryText=&quot;the rain in spain&quot;<br><br><br><br>Name := Capitalize(EntryText)<br><br><br><br>函数的结果为：&quot;The Rain In Spain&quot;<br><br><br><br>Name := Capitalize(EntryText, 1)<br><br><br><br>函数的结果为：&quot;The rain in spain&quot; <br><br> <br><br>Catalog <br><br> File <br><br> 格式：<br><br><br><br>1：string := Catalog(&quot;folder&quot;)<br><br><br><br>2：string := Catalog(&quot;folder&quot;，“F”)<br><br><br><br>3：string := Catalog(&quot;folder&quot;，“F”)<br><br><br><br>说明：<br><br><br><br>1：将folder文件夹中的子文件夹和文件名以字符串的形式赋给变量string。<br><br><br><br>2：（D）将folder文件夹中的子文件夹以字符串的形式赋给变量string。<br><br><br><br>3：（F）将folder文件夹中的文件名以字符串的形式赋给变量string。 <br><br> <br><br>CharCount <br><br> Character <br><br> 格式：number := CharCount(&quot;string&quot;)<br><br><br><br>说明：返回字符串中的字符的个数，包括空格和特殊字符。<br><br><br><br>例如：<br><br><br><br>MyString := &quot;a b c&quot;<br><br><br><br>Number := CharCount(MyString)<br><br><br><br>Number的值为5。 <br><br> <br><br>Char <br><br> Character <br><br> 格式：string := Char(key)<br><br><br><br>说明：该函数取Key所指定按键的名称或数值，然后以字符的形式赋给管理Sting。 <br><br> <br><br>ChildIDToNum <br><br> Icons <br><br> 格式：<br><br><br><br>number:= hildIDToNum(IconID@&quot;ParentTitle&quot;, @&quot;ChildTitle&quot; [, flag])]<br><br><br><br>说明：该函数返回一个数值，用来标记由ChildTitle所指定的在【映射】设计按钮或附属于分支结构的ParentTitle结构中的相对位置，ParentTitle代表的是【映射】设计按钮或具有分支功能的设计按钮的标题名。在Authorware中，【映射】设计按钮包含的设计按钮按照从上至下的顺序进行标记，最顶端的设计按钮位置为1，其它的设计按钮依次类推；<br><br><br><br>【交互作用】分支结构中是按照从左至右的顺序来标记，位于最左边的反馈按钮相对位置为1，其它依次类推。<br><br><br><br>对于【框架】设计按钮，其分支结构分三种情况：<br><br><br><br>1：当参数flag＝0时，ChildTitle必须是页所对应的设计按钮的标题，这些页的相对位置是从左至右的顺序进行标记；<br><br><br><br>2：当参数flag＝1时，ChildTitle是框架内部结构输入画面中设计按钮的标题，其相对位置是从左至右的顺序进行标记；<br><br><br><br>3：当参数flag＝2时，ChildTitle是框架内部结构退出画面中设计按钮的标题，其相对位置是从左至右的顺序进行标记； <br><br> <br><br>ChildNumToID <br><br> Icons <br><br> 格式：<br><br><br><br>ID := ChildNumToID(IconID@&quot;Parent&quot;, n [, flag]) <br><br> <br><br>　 　 说明：该函数的作用是返回【映射】设计按钮、【交互作用】设计按钮、【框架】结构中相对位置为n处的设计按钮的ID表示，参数flag的含义同上所述。 <br><br> <br><br>Circle <br><br> Graphics <br><br> 格式：Circle(pensize, x1, y1, x2, y2)<br><br><br><br>说明：在左上角坐标为（x1,y1），右下角坐标为（x2,y2）的方框内绘制同该方框相内切的圆，我们可以使用SetFrame 和 SetFill函数来调整线型的颜色和填充色；<br><br><br><br>当pensize&lt;0时，圆内以黑色填充；<br><br><br><br>当pensize＝0时，圆内以白色填充；<br><br><br><br>当pensize,&gt;0时，圆周线条的宽度等于pensize,指定的像素点的值，圆内没有填充色。 <br><br> <br><br>CloseWindow <br><br> Platform <br><br> 格式：CloseWindow(&quot;window&quot;)<br><br><br><br>说明：该函数的作用是关闭有“Window”所指定的窗口，该函数时由XCMD 或 UCD (DLL)所生成的。 <br><br> <br><br>Code <br><br> Character <br><br> 格式：number := Code(&quot;character&quot;)<br><br><br><br>说明：该函数的作用是返回&quot;character&quot;所对应的ASCII码，例如：<br><br><br><br>Code(d)的返回值为100。 <br><br> <br><br>CopyList <br><br> List <br><br> 格式：newList := CopyList(anyList)<br><br><br><br>说明：该函数实现列表的完全拷贝，生成一个新的列表，列表拷贝和列表赋值的不同：<br><br><br><br>使用列表拷贝，对新列表的改变不影响源列表的内容；列表的赋值生成新列表，对新列表的改变会影响源列表的内容：例如：<br><br><br><br>1：列表的拷贝：<br><br><br><br>ListA := [10, 20, 30]<br><br><br><br>ListB := CopyList(ListA)<br><br><br><br>DeleteAtIndex(ListB, 1)<br><br><br><br>ListA 内容不变，而ListB 为 [20, 30]，<br><br><br><br>2：赋值生成列表：<br><br><br><br>ListA := [10, 20, 30]<br><br><br><br>ListB := ListA<br><br><br><br>DeleteAtIndex(ListB, 1)<br><br><br><br>ListA 和 ListB 的值都是 [20, 30]。 <br><br> <br><br>COS <br><br> Math <br><br> 格式：number := COS(angle)<br><br><br><br>说明：计算x的余弦值，将值赋给number，其中x为角度，单位是弧度。 <br><br> <br><br>CreateFolder <br><br> File <br><br> 格式：number := CreateFolder(&quot;folder&quot;)<br><br><br><br>说明：使用该函数来创建一个有folder指定名称的文件夹，缺省情况下，该文件夹是当前文件夹的子文件夹。文件运行后，Authorware改变两个系统变量IOStatus 和IOMessage，用来存储该函数的执行信息，如果没有错误IOStatus的返回值为0，而IOMessage为空；如果有错误，IOStatus 的返回值不为0， IOMessage中存储的是错误信息。 <br><br> <br><br>Date <br><br> Time <br><br> 格式：string := Date(number)<br><br><br><br>说明：参数number中存储的是总的天数，该函数将总的天数转换成当前计算机系统的简短的日期格式。<br><br><br><br>该天数的起始时间为1900年1月1日。<br><br><br><br>在Authorware中number的范围为：（25568 49709） (January, 1, 1970, 到 June, 2, 2036)。 <br><br> <br><br>DateToNum <br><br> Time <br><br> 格式：number := DateToNum(day, month, year)<br><br><br><br>说明：该函数的作用是将输入的日期同1900年1月1日的时间差转换为总的天数值。参数day 表示日期，范围为（1，31）；参数month表示月份，范围为（1，12）；参数year为年份，有效值范围为（1970，2036） <br><br> <br><br>Day <br><br> Time <br><br> 格式：value := Day(number)<br><br><br><br>说明：该函数的作用是自1900年1月1日算起，返回指定的总天数所对应的月中的第几天。<br><br><br><br>该函数中参数number值的范围为：25568 到 49709 (January 1, 1970 到 June 2, 2036)；<br><br><br><br>下面的例子范围1970年1月1日所对应的月中的天数：<br><br><br><br>result := Day(25568)<br><br><br><br>返回值为：1。 <br><br> <br><br>DayName <br><br> Time <br><br> 格式：string := DayName(numbe<br><br><br><br>说明：该函数的作用是自1900年1月1日算起，返回指定的总天数所对应的星期中的星期几。<br><br><br><br>该函数中参数number的范围为：25568 到 49709 (January 1, 1970 到 June 2, 2036)；<br><br><br><br>下面的例子为1970年1月1日所对应的星期几： <br><br> <br><br>&nbsp; result := Day(25568)<br><br><br><br>result 的 值为&quot;Thursday&quot;. <br><br> <br><br>DeleteAtIndex <br><br> List <br><br> 格式：DeleteAtIndex(anyList, index)<br><br><br><br>说明：该函数按照索引从列表中删除一个特定的元素；例如：<br><br><br><br>anyList := [1, 2, 3]<br><br><br><br>DeleteAtIndex(anyList, 1)<br><br><br><br>anyList 的值改变为[2, 3]。 <br><br> <br><br>DeleteAtProperty <br><br> List <br><br> 格式：DeleteAtProperty(propertyList, #property)<br><br><br><br>说明：该函数删除在列表中第一个具有特定属性的元素；<br><br><br><br>例如：<br><br><br><br>1：propList := [#a:1, #b:2, #c:3]<br><br><br><br>DeleteAtProperty(propList, #a)<br><br><br><br>propList 的值为：[#b:2, #c:3]；<br><br><br><br>2：propList := [#a:1, #a:2, #a:3]<br><br><br><br>DeleteAtProperty(propList, #a)<br><br><br><br>PropList的值[#a:2, #a:3]；<br><br><br><br>3：propList := [#a:1, #A:2, #A:3]<br><br><br><br>DeleteAtProperty(propList, #A)<br><br><br><br>PropList的值为[#a:2, #a:3]。 <br><br> <br><br>DeleteFile <br><br> File <br><br> 格式：number := DeleteFile(&quot;filename&quot;)<br><br><br><br>说明：该函数的作用是删除filename所指定的文件，在删除文件时，请带上文件的扩展名，避免发生误删除。函数运行后，Authorware改变两个系统变量IOStatus 和IOMessage，用来存储该函数的执行信息，如果没有错误IOStatus的返回值为0，而IOMessage为空；如果有错误，IOStatus 的返回值不为0， IOMessage中存储的是错误信息。 <br><br> <br><br>DeleteLine <br><br> Character <br><br> 格式：1：Result := DeleteLine(&quot;string&quot;, n )<br><br><br><br>2：Result := DeleteLine(&quot;string&quot;, n , m)<br><br><br><br>3：Result := DeleteLine(&quot;string&quot;, n , m, delim)<br><br><br><br>说明：<br><br><br><br>1：删除字符串中的第n行，返回剩下的内容；<br><br><br><br>2：删除字符串中从第n行到第m行，然后返回剩下的内容；<br><br><br><br>3：删除字符串中从第n行到第m行中以delim指定的分界符结尾的行，然后返回剩下的内容。 <br><br> <br><br>DeleteObject <br><br> General <br><br> 格式：DeleteObject(object)<br><br><br><br>说明：该函数删除一个由NewObject创建的scripting Xtra对象。 <br><br> <br><br>DisplayIcon <br><br> Icons <br><br> 格式：DisplayIcon(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：运行该函数，将显示IconTitle所指定的设计按钮中所有正文及图片对象显示在展示窗口中。 <br><br> <br><br>DisplayIconNoErase <br><br> Icons <br><br> 格式：DisplayIconNoErase(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：运行该函数，将显示IconTitle所指定的设计按钮中所有正文及图片对象显示在展示窗口中，并将该设计按钮的属性设置为同【Properties】对话框中的【Prevent Auto Erase】选项相同的属性。 <br><br> <br><br>DrawBox <br><br> Graphics <br><br> 格式：1：DrawBox(pensize)<br><br><br><br>2：DrawBox(pensize, [x1, y1, x2, y2])<br><br><br><br>说明：<br><br><br><br>1：该函数设置的目的是使最终用户使用鼠标拖动的方法来绘制方框，线型的宽度由pensize来决定，用该方法使用该函数必须在热区响应区域中使用；<br><br><br><br>2：该函数是使最终用户只能在（x1,y1），（x2,y2）所限定的范围内绘制方框，方框线型由参数pensize决定:<br><br><br><br>我们可以使用SetFrame 和 SetFill函数来调整线型的颜色和填充色；<br><br><br><br>当pensize&lt;0时，方框以黑色填充；<br><br><br><br>当pensize＝0时，方框以白色填充；<br><br><br><br>当pensize,&gt;0时，方框线条的宽度等于pensize,指定的像素点的值，方框内没有填充色。 <br><br> <br><br>DrawCircle <br><br> Graphics <br><br> 格式：1：DrawCircle(pensize)<br><br><br><br>2：DrawCircle(pensize, [x1, y1, x2, y2])<br><br><br><br>说明：<br><br><br><br>1：该函数设置的目的是使最终用户使用鼠标拖动的方法来绘制椭圆，线型的宽度由pensize来决定，用该方法使用该函数必须在热区响应区域中使用；<br><br><br><br>2：该函数是使最终用户只能在（x1,y1），（x2,y2）所限定的范围内绘制椭圆，椭圆线型由参数pensize决定:<br><br><br><br>我们可以使用SetFrame 和 SetFill函数来调 <br><br> <br><br>　 　 整线型的颜色和填充色；<br><br><br><br>当pensize&lt;0时，椭圆内以黑色填充；<br><br><br><br>当pensize＝0时，椭圆内以白色填充；<br><br><br><br>当pensize,&gt;0时，椭圆线条的宽度等于pensize,指定的像素点的值，椭圆内没有填充色。 <br><br> <br><br>DrawLine <br><br> Graphics <br><br> 格式：：1：DrawLine(pensize)<br><br><br><br>2：DrawLine(pensize, [x1, y1, x2, y2])<br><br><br><br>说明：<br><br><br><br>1：该函数设置的目的是使最终用户使用鼠标拖动的方法来绘制直线，线型的宽度由pensize来决定，用该方法使用该函数必须在热区响应区域中使用；<br><br><br><br>2：该函数是使最终用户只能在（x1,y1），（x2,y2）所限定的范围内绘制直线，直线线型由参数pensize决定:<br><br><br><br>我们可以使用SetFrame 来调整线型的颜色。 <br><br> <br><br>EraseAll <br><br> Icons <br><br> 格式：EraseAll() <br><br><br><br>说明：该函数只能在【元素】设计按钮中使用，其作用是擦除展示窗口中显示的所有对象。 <br><br> <br><br>EraseIcon <br><br> Icons <br><br> 格式：EraseIcon(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数的作用是擦除指定设计按钮中所有的显示对象。 <br><br> <br><br>Eval, <br><br> Character <br><br> 格式：<br><br><br><br>result := Eval(&quot;expression&quot; [, decimal, separator])说明：该函数的功能是计算表达式expression的值，并将该值赋给result，在该函数的expression表达式中，不能包含赋值操作符“:=”。 <br><br> <br><br>EvalAssign <br><br> Character <br><br> 格式：<br><br><br><br>result := EvalAssign(&quot;expression&quot; [, decimal, separator])<br><br><br><br>说明：该函数的功能同Eval相似，计算表达式expression的值，并将该值赋给result，在该函数的expression表达式中，可以包含赋值操作符“:=”。 <br><br> <br><br>Exit Repeat <br><br> 　 格式：ExitRepeat<br><br><br><br>说明：该函数在【运算】设计按钮中使用，跳出Repeat循环，执行下面的内容，如果下面没有内容，则退出该【运算】设计按钮。 <br><br> <br><br>Exit <br><br> Language <br><br> 格式：Exit<br><br><br><br>说明：当Authorware在程序的执行过程中，一旦遇到该函数，在Authorware自动退出该【运算】设计按钮。执行其它设计按钮中的内容。<br><br><br><br>例如：<br><br><br><br>if ScreenDepth &gt;= 8 then exit<br><br><br><br>Message := &quot;You need to set your computer to display 256 colors.&quot; <br><br> <br><br>EXP <br><br> Math <br><br> 格式：number := EXP(x)<br><br><br><br>说明：将x的自然指数的值赋给number。 <br><br> <br><br>EXP10 <br><br> Math <br><br> 格式：number := EXP10(x)<br><br><br><br>说明：将x的以10为底的指数值赋给number 。 <br><br> <br><br>FileType <br><br> File <br><br> 格式：number := FileType(&quot;filename&quot;)<br><br><br><br>说明：该函数的结果是返回一个数字，该数字代表文件或文件夹的不同类型：<br><br><br><br>0：表示无此文件或错误；<br><br><br><br>1：表示目录（文件夹）；<br><br><br><br>2：表示为打包的文件(.A4P)；<br><br><br><br>3：表示不包含RunA4W的打包文件 (.A4R)； 4：表示模板文件 (.A4D)；<br><br><br><br>5：表示声音文件 (.AIF, .PCM, or .WAV)；<br><br><br><br>6：表示数字电影文件<br><br><br><br>(.MOV, .AVI, .MPG, .DIR)；<br><br><br><br>7： 表示PICS 电影文件；<br><br><br><br>8： 表示用户代码(.UCD or .DLL)；<br><br><br><br>9： 表示文本文件 (.TXT)；<br><br><br><br>10： 表示应用程序文件(.EXE, .COM, .BAT, <br><br><br><br>.PIF)；<br><br><br><br>11：表示其它文件；<br><br><br><br>12：表示库文件(.A4L)；<br><br><br><br>13：表示打包后的库文件(.A4E)； <br><br> <br><br>Find <br><br> Character <br><br> 格式：number := Find(&quot;pattern&quot;, &quot;string&quot;)<br><br><br><br>说明：在字符串string中查找由pattern所指定的字符串的位置，该位置的计算方法是按照字符串从左至右的方法为顺序。<br><br><br><br>例如：<br><br><br><br>result:=Find(r,carry)<br><br><br><br>result的值为3，如果在string中没有找到patten, <br><br> <br><br>　 　 则返回值为0。<br><br><br><br>该函数的参数pattern中我们可以使用通配符<br><br><br><br>“*”：代表零个或多个字符；<br><br><br><br>“？”：代表单个字符；<br><br><br><br>使用“\”来去除字符中特殊的含义。 <br><br> <br><br>FindProperty <br><br> List <br><br> 格式：<br><br><br><br>index :=FindProperty(propertyList, #property, [index])<br><br><br><br>说明：该函数返回具有属性的列表中，从index往后第一个具有特定属性的字符串的位置。例如：<br><br><br><br>1：propList := [#a:1, #b:2, #c:3, #a:1, #b:2, #c:3]<br><br><br><br>index := FindProperty(propList, #b)<br><br><br><br>index 的值为 2；<br><br><br><br>2：propList := [#a:1, #b:2, #c:3, #a:1, #b:2, #c:3]<br><br><br><br>index := FindProperty(propList, #b, 3)<br><br><br><br>index 的值为 5；<br><br><br><br>3：propList := [#a:1, #A:2, #A:3]<br><br><br><br>index := FindProperty(propList, #A)<br><br><br><br>index 的值为 1。 <br><br> <br><br>FindText <br><br> Framework <br><br> 格式：number := FindText(&quot;searchString&quot;, scopeIconID, textOrKeywords, matchPattern,?<br><br><br><br>resultsInContext, convertResultsToPageIDs, searchInBackground)<br><br><br><br>说明：该函数具有强大的搜寻功能，具体内容参见函数与变量和表达式实例。 <br><br> <br><br>FindValue <br><br> List <br><br> 格式：<br><br><br><br>index := FindValue(anyList, value [, index])<br><br><br><br>说明：该函数返回在列表中，从index往后第一个具有指定值的字符串的位置。如果没有寻找到同value相同的字符串或anylist参数不是一个列表，则该函数返回值为“0”。<br><br><br><br>例如：<br><br><br><br>1：numList := [10, 20, 30]<br><br><br><br>index := FindValue(numList, 20)<br><br><br><br>返回的数值为 2.<br><br><br><br>2：propList := [#a:10, #b:20, #c:30, #a:10, #b:20, #c:30]<br><br><br><br>index := FindValue(propList, 20, 3)<br><br><br><br>index 的值为 5。 <br><br> <br><br>FlushEventQueue <br><br> General <br><br> 格式：FlushEventQueue()<br><br><br><br>说明：该函数将事件队列中等待执行的某事件取消掉。 <br><br> <br><br>FlushKeys <br><br> General <br><br> 格式：FlushKeys()<br><br><br><br>说明：该函数的作用是忽略最终用户按下的任何键。 <br><br> <br><br>Fraction <br><br> Math <br><br> 格式：result:=Fraction(number)<br><br><br><br>说明：该函数返回number数值中的小数点后的内容，包括小数点；例如：<br><br><br><br>Result := Fraction(12.34)<br><br><br><br>Result 的值为“.34”。 <br><br> <br><br>FullDate <br><br> Time <br><br> 格式：string := FullDate(number)<br><br><br><br>说明：number为总天数，该函数是从1900年1月1日算起，将天数转换为具体的日期，其中number的值的范围为：25568 到 49709 (January, 1, 1970 到 June, 2, 2036)。<br><br><br><br>例如：<br><br><br><br>FullDate（25569）的值为：January, 2, 1970；该函数的返回值的格式同各计算机系统的设置有关。 <br><br> <br><br>GetIconProperty <br><br> General <br><br> 格式：<br><br><br><br>result := <br><br><br><br>GetIconProperty(IconID@&quot;SpriteIconTitle&quot;, #property)<br><br><br><br>说明：该函数返回指定设计按钮SpriteIconTitle中，指定属性的值。 <br><br> <br><br>GetLine <br><br> Character <br><br> 格式：1：resultString := GetLine(&quot;string&quot;,n)<br><br><br><br>2：resultString := GetLine(&quot;string&quot;, n , m)<br><br><br><br>3：resultString := GetLine(&quot;string&quot;, n , m, delim)<br><br><br><br>说明：<br><br><br><br>1：取出字符串中的第n行的内容；<br><br><br><br>2：取出字符串中从第n行到第m行中的内容；<br><br><br><br>3：取出字符串中从第n行到第m行中以delim指定的分界符结尾的行的内容。 <br><br> <br><br>GetMovieInstance <br><br> Icons <br><br> 格式：<br><br><br><br>identifier:= GetMovieInstance(IconID@&quot;MovieTitle&quot;)<br><br><br><br>说明：<br><br><br><br>该函数返回的是由MovieTitle指定的设计按钮中播放的数字化电影的数字标识。 <br><br> <br><br>GetNumber <br><br> Character <br><br> 格式：number := GetNumber(n, &quot;string&quot;)<br><br><br><br>说明：该函数返回string中第n个数字字符的数字值，如果n已经超出了string的界限或没有在第n的位置找到数字字符，则该函数返回值为“0”。 <br><br> <br><br>GetProperty <br><br> Platform <br><br> 格式：<br><br><br><br>value := GetProperty(&quot;window&quot;, #property)<br><br><br><br>说明：该函数的作用是取得window指定的窗口属性的值，该窗口是由XCMD 或 UCD (DLL)所产生的。 <br><br> <br><br>GetSpriteProperty <br><br> 　 格式：<br><br><br><br>result := <br><br><br><br>GetSpriteProperty(IconID@&quot;SpriteIconTitle&quot;, #property)<br><br><br><br>说明：该函数取得一个sprite属性的值。 <br><br> <br><br>GetTextContaining <br><br> Framework <br><br> 格式：<br><br><br><br>string := GetTextContaining(n [, m, maxlen])<br><br><br><br>说明：该函数返回由FindText函数所定位的单词和该单词的上下文。<br><br><br><br>例如：<br><br><br><br>1：string := GetTextContaining(5)<br><br><br><br>该函数返回第五个相匹配的单词的内容；<br><br><br><br>2：string := GetTextContaining(5,5,20)<br><br><br><br>该实例返回第五次所匹配的单词的上下文，字符的总数为20个。 <br><br> <br><br>GetWord <br><br> Character <br><br> 格式：resultString := GetWord(n, &quot;string&quot;)<br><br><br><br>说明：该函数中返回第n个字符的内容，如果n的值超过string的界限，该函数返回一个空的字符串。 <br><br> <br><br>GoTo <br><br> Jump <br><br> 格式：GoTo(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数使Authorware调整到IconTitle指定的设计按钮中。 <br><br> <br><br>GoToNetPage <br><br> Net <br><br> 格式：GoToNetPage(&quot;URL&quot; [, &quot;windowType&quot;])<br><br><br><br>说明：该函数实现Authorware在网络上的跳转；例如：<br><br><br><br>GoToNetPage(&quot;http://www.macromedia.com&quot;) <br><br> <br><br>IconFirstChild <br><br> Icons <br><br> 格式：<br><br><br><br>ID := IconFirstChild(IconID@&quot;IconTitle&quot; [, flag])<br><br><br><br>说明：该函数返回【映射】设计按钮中的第 <br><br> <br><br>　 　 一个设计按钮的ID标识，或【交互作用】设计按钮中的第一分支中反馈设计按钮的ID标识，或者【框架】结构中第一个设计按钮的ID标识，在框架结构中，有三种第一个设计按钮的方式，这三种方式由参数flag。<br><br><br><br>参数flag的含义如下：<br><br><br><br>对于【框架】设计按钮，其分支结构分三种情况：<br><br><br><br>1：当参数flag＝0时，该函数返回的是页所对应的设计按钮的标题，这些页的相对位置是从左至右的顺序进行标记；<br><br><br><br>2：当参数flag＝1时，该函数返回的是框架内部结构输入画面中设计按钮的标题，其相对位置是从左至右的顺序进行标记；<br><br><br><br>3：当参数flag＝2时，该函数返回的是框架内部结构退出画面中设计按钮的标题，其相对位置是从左至右的顺序进行标记； <br><br> <br><br>IconLastChild <br><br> Icons <br><br> 格式：<br><br><br><br>ID := IconLastChild(IconID@&quot;IconTitle&quot; [, flag])<br><br><br><br>说明：该函数返回【映射】设计按钮中的最后一个设计按钮的ID标识，或【交互作用】设计按钮中的最后分支中反馈设计按钮的ID标识，或者【框架】结构中最后一个设计按钮的ID标识，在框架结构中，有三种最后一个设计按钮的方式，这三种方式由参数flag。<br><br><br><br>参数flag的含义如下：<br><br><br><br>对于【框架】设计按钮，其分支结构分三种情况：<br><br><br><br>1：当参数flag＝0时，该函数返回的是页所对应的设计按钮的标题，这些页的相对位置是从左至右的顺序进行标记；<br><br><br><br>2：当参数flag＝1时，该函数返回的是框架内部结构输入画面中设计按钮的标题，其相对位置是从左至右的顺序进行标记；<br><br><br><br>3：当参数flag＝2时，该函数返回的是框架内部结构退出画面中设计按钮的标题，其相对位置是从左至右的顺序进行标记； <br><br> <br><br>IconLogID <br><br> Icons <br><br> 格式：number := IconLogID(n)<br><br><br><br>说明：该函数的作用是返回从当前正在执行 <br><br> <br><br>　 　 的设计按钮之前的第n个设计按钮的ID标识。当n=0时，返回当前执行的设计按钮的ID标识。 <br><br> <br><br>IconLogTitle <br><br> Icons <br><br> 格式：1：string := IconLogTitle(n)<br><br><br><br>2：string := IconLogTitle(n, m)<br><br><br><br>说明：<br><br><br><br>1：该函数的作用是返回从当前正在执行的设计按钮之前的第n个设计按钮的标题。当n=0时，返回当前执行的设计按钮的标题。<br><br><br><br>2：该函数返回在n和m之间的所有设计按钮的标题。 <br><br> <br><br>IconNext <br><br> Icons <br><br> 格式：ID := IconNext(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：在【映射】设计按钮中，该函数返回当前执行的设计按钮的下一个设计按钮的ID标识，当在【交互作用】分支结构或【框架】结构中该函数包含当前执行的设计按钮右边的反馈分支设计按钮的ID标识。如果当前设计按钮为最后一个设计按钮，则该函数返回值为“0”。 <br><br> <br><br>IconNumChildren <br><br> Icons <br><br> 格式：number:= IconNumChildren(IconID@&quot;IconTitle&quot; [, flag])<br><br><br><br>说明：我们使用该函数来返回【映射】设计按钮中包含的设计按钮的数目，【交互作用】设计按钮中分支路径设计按钮的数目，对应【框架】结构，返回各分支的数目，对于框架结构我们使用flag参数来设定其特指的结构的位置，具体的内容参见IconLastChild。 <br><br> <br><br>IconParent <br><br> Icons <br><br> 格式：ID := IconParent(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数返回指定IconTitle设计按钮所属的设计按钮，对于一个IconTitle所指定的分支结构中的设计按钮，返回的是该设计按钮附属的组成分支结构的设计按钮。 <br><br> <br><br>IconPrev <br><br> Icons <br><br> 格式：ID := IconPrev(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：在【映射】设计按钮中，该函数返回当前执行的设计按钮的上一个设计按钮的ID标识，当在【交互作用】分支结构或【框架】结构中该函数包含当前执行的设计按钮左边的反馈分支设计按钮的ID标识。如果当前设计按钮为第一个设计按钮，则该函数返回值为“0”。 <br><br> <br><br>IconTitle <br><br> Icons <br><br> 格式：string := IconTitle(IconID)<br><br><br><br>说明：该函数IconID指定的设计按钮的标题。包括对该设计按钮的注释。 <br><br> <br><br>IconTitleShort <br><br> Icons <br><br> 格式：string := IconTitleShort(IconID)<br><br><br><br>说明：该函数返回的该函数IconID指定的设计按钮的标题。不包括对该设计按钮的注释。 <br><br> <br><br>IconType <br><br> Icons <br><br> 格式：number:= IconType(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数返回IconTitle指定的设计按钮的类型：<br><br><br><br>0：错误的icon ID标识；1：【显示】设计按钮；2：【移位】设计按钮；3：【擦除】设计按钮4：【交互作用】设计按钮； 5：【判定】设计按钮；6：【映射】设计按钮7：【等待】设计按钮8：【运算】设计按钮；9：数字化电影； 10：【声音】设计按钮； 11：【视频】设计按钮； 12：【框架】设计按钮； 13：【定向】设计按钮；14： Sprite Xtra 设计按钮。 <br><br> <br><br>IconTypeName <br><br> Icons <br><br> 格式：string := IconTypeName(n)<br><br><br><br>说明：当用n用0~14中的一个数字进行替换时，该函数返回的是相应的设计按钮的描述：<br><br><br><br>1： Display 8： Calc<br><br><br><br>2： Motion 9： Movie<br><br><br><br>3： Erase 10： Sound<br><br><br><br>4： Interaction 11： Video<br><br><br><br>5： Decision 12： Framework<br><br><br><br>6： Map 13： Navigate<br><br><br><br>7： Wait 14： Xtra <br><br> <br><br>If-Then <br><br> Language <br><br> 格式：if condition then statement<br><br><br><br>或者 ：if condition then<br><br><br><br>statement(s)<br><br><br><br>end if<br><br><br><br>或者：if condition then statement else statement<br><br><br><br>或者： if condition then<br><br><br><br>statement(s)<br><br><br><br>else<br><br><br><br>statement(s)<br><br><br><br>end if<br><br><br><br>或者：if condition then<br><br><br><br>statement(s) <br><br> <br><br>　 　 else if condition then<br><br><br><br>statement(s)<br><br><br><br>else<br><br><br><br>statement(s)<br><br><br><br>end if<br><br><br><br>说明：如果If后的条件为真，则执行statements1，否则执行statements2。 <br><br> <br><br>InflateRect <br><br> List <br><br> 格式：InflateRect(rectangle, widthChange, heightChange)<br><br><br><br>说明：该函数改变指定矩形的尺度，widthChange为对宽度的变化值，heightChange为对矩形高度的改变值，负值为对矩形尺度的缩小，正值为对矩形尺度的增加。每一单位数值代表两个像素。 <br><br> <br><br>Initialize <br><br> General <br><br> 格式：Initialize([variable1, variable2, ? variable10])<br><br><br><br>说明：将variable1, variable2等变量的值恢复成为初始化值。 <br><br> <br><br>InsertLine <br><br> Character <br><br> 格式：<br><br><br><br>1：Result := InsertLine(&quot;string&quot;, n, &quot;newstring&quot;, )<br><br><br><br>2：Result := InsertLine(&quot;string&quot;, n, &quot;newstring&quot;, delim)<br><br><br><br>说明：<br><br><br><br>1：将newstring插入到string字符串中的第n行，并将最后结果返回给Result。<br><br><br><br>2：使用delim分隔参数时，函数在指定地插入行的同时，还要插入有delim指定的分隔符。 <br><br> <br><br>Intersect <br><br> List <br><br> 格式：newRectangle := Intersect(rectangle1, rectangle2)<br><br><br><br>说明：从两个矩形的交叉点，创建一个新的矩形，例如：<br><br><br><br>Rectangle1 := Rect(0, 0, 20, 20)<br><br><br><br>Rectangle2 := Rect(10, 10, 30, 30)<br><br><br><br>Rectangle3 := Intersect(Rectangle1, Rectangle2)<br><br><br><br>Rectangle3 is (10, 10, 20, 20). <br><br> <br><br>INT <br><br> Math <br><br> 格式：number := INT(x)<br><br><br><br>说明：对数x取整，例如：<br><br><br><br>INT(3.14) 返回值 3；<br><br><br><br>INT(&quot;1a2b3c&quot;) 返回值123。 <br><br> <br><br>JumpFile <br><br> Jump <br><br> 格式：JumpFile(&quot;filename&quot;, [&quot;variable1, variable2,…,&quot;folder&quot;])<br><br><br><br>说明：该函数使Authorware跳转到指定的文件中。 <br><br> <br><br>JumpFileReturn <br><br> Jump <br><br> 格式：JumpFileReturn(&quot;filename&quot;, [&quot;variable1, variable2, …&quot;folder&quot;])<br><br><br><br>说明：该函数使Authorware跳转到指定的文件中，当退出该文件后，Authorware返回到原始的文件中。 <br><br> <br><br>JumpOut <br><br> Jump <br><br> 格式：JumpOut(&quot;program&quot;, [&quot;document&quot;] [,&quot;creator&quot;]))<br><br><br><br>说明：该函数将把document指定的文件在program指定的应用程序中打开。并退出Authorware。 <br><br> <br><br>JumpOutReturn <br><br> Jump <br><br> 格式：JumpOutReturn(&quot;program&quot;, [&quot;document&quot;] [,&quot;creator&quot;])<br><br><br><br>说明：该函数的功能同JumpOut类似，唯一的不同是该函数并不退出Authorware，仅将Authorware放到后台来运行，将programe所指定的应用程序放到前台运行。<br><br><br><br>Creator参数使用在Macintosh机上使用。 <br><br> <br><br>JumpPrintReturn <br><br> Jump <br><br> 格式：JumpPrintReturn([&quot;program&quot;], &quot;document&quot; [, &quot;creator&quot;])<br><br><br><br>说明：该函数是在program中指定的应用程序中打开document并在该应用程序中打印，打印完毕后继续演示。该函数只能在【运算】设计按钮中使用，而不能在表达式或插入到正文对象中。<br><br><br><br>Creator参数使用在Macintosh机上使用。 <br><br> <br><br>Keywords <br><br> Framework <br><br> 格式：string := Keywords(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：返回指定设计按钮中的所有关键词，如果有多个关键词，返回时用回车符进行分隔。 <br><br> <br><br>LayerDisplay <br><br> Icons <br><br> 格式：<br><br><br><br>LayerDisplay(LayerNumber [,IconID@&quot;IconTitle&quot;])<br><br><br><br>说明：该函数用来设定IconTitle设计按钮中显示对象的层数：<br><br><br><br>缺省情况下，数字化电影的层次级别为1，其它显示对象的层次为0。 <br><br> <br><br>LineCount <br><br> Character <br><br> 格式：number := LineCount(&quot;string&quot;[, delim])<br><br><br><br>说明：该函数返回字符串string的总行数，包括空白行。 <br><br> <br><br>LN <br><br> Math <br><br> 格式：number := LN(x)<br><br><br><br>说明：该参数x取自然对数的值。 <br><br> <br><br>LOG10 <br><br> Math <br><br> 格式：number := LOG10(x)<br><br><br><br>说明：该函数返回x的以10为底的对数的值。 <br><br> <br><br>LowerCase <br><br> Character <br><br> 格式：resultString := LowerCase(&quot;string&quot;)<br><br><br><br>说明：将字符串string的字符全部转化为小写字母后返回。 <br><br> <br><br>MapChars <br><br> Character <br><br> 格式：string := MapChars(&quot;string&quot;, fromPlatform [, toPlatform])<br><br><br><br>说明：该函数实现字体在不同系统间的转化，其参数fromPlatform，toPlatform的含义如下：<br><br><br><br>0=current, 1=Windows, 2=Macintosh <br><br> <br><br>Max <br><br> Math <br><br> 格式：value := Max(anyList)<br><br><br><br>value := Max(a [, b , c, d, e, f, g, h, i, j])<br><br><br><br>说明：取列表中，或各参数中的最大值。 <br><br> <br><br>MediaPause <br><br> General <br><br> 格式：MediaPause(IconID@&quot;IconTitle&quot;, pause)<br><br><br><br>说明：该函数的作用是暂停或继续播放在指定设计按钮中的数字化电影，参数pause为TRUE时，暂停播放，参数pause为FALSE时，Authorware将继续播放。 <br><br> <br><br>MediaPlay <br><br> General <br><br> 格式：MediaPlay(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：<br><br><br><br>该函数是使指定设计按钮中的数字化电影开始播放。 <br><br> <br><br>MediaSeek <br><br> General <br><br> 格式：MediaSeek(IconID@&quot;IconTitle&quot;, position)<br><br><br><br>说明：<br><br><br><br>该函数的作用是设置指定设计按钮中数字化电影的帧数，使Authorware直接定位该帧的图像。 <br><br> <br><br>Min <br><br> Math <br><br> 格式：value := Min(anyList)<br><br><br><br>value := Min(a [, b, c, d, e, f, g, h, i, j])<br><br><br><br>说明：返回列表中，或各参数中的最大值。 <br><br> <br><br>MOD <br><br> Math <br><br> 格式：number := MOD(x, y)<br><br><br><br>说明：该函数返回x/y的余数。<br><br><br><br>例如：<br><br><br><br>将24小时制的时间转化为12小时制的时间：<br><br><br><br>Hours := Mod(2300/100,12) <br><br> <br><br>Month <br><br> Time <br><br> 格式：number := Month(number)<br><br><br><br>说明：number为距离1900年1月1日的天数，该函数返回的是从该天算起number天数在当前的月的数值。<br><br><br><br>Number参数的范围为25568到 49709 (January 1, 1970 为 June 2, 2036) <br><br> <br><br>MonthName <br><br> Time <br><br> 格式：string := MonthName(number)<br><br><br><br>说明：number为距离1900年1月1日的天数，该函数返回的是从该天算起number天数在当前的月的名称。<br><br><br><br>Number参数的范围为25568到 49709 (January 1, 1970 为 June 2, 2036) <br><br> <br><br>MoveWindow <br><br> General <br><br> 格式：MoveWindow(top, left)<br><br><br><br>说明：该函数只能在【运算】设计按钮中使用，不能作为装饰或在表达式中使用，该函数的作用是将展示窗口遇到到指定的位置。 <br><br> <br><br>NetDownload <br><br> Net <br><br> 格式：string := NetDownload(&quot;URL&quot;)<br><br><br><br>说明：该函数将指定URL中的文件下载到本地硬盘上，并返回在下载文件在本地硬盘上的路径和文件名。 <br><br> <br><br>NetPreload <br><br> Net <br><br> 格式：NetPreload(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数的作用是使用Authorwaed Shockwave插件将指定设计按钮中的内容，上载到网络上，准备以后的使用。 <br><br> <br><br>NewObject <br><br> General <br><br> 格式：object := NewObject(&quot;Xtra&quot; [, arguments...])<br><br><br><br>说明：该函数创建一个新的scripting Xtra并通过参数的设置来调用一个实例启动。 <br><br> <br><br>Next Repeat <br><br> Language <br><br> 格式：Next Repeat<br><br><br><br>说明：使用该函数在循环控制中，省略后面的内容，从头重新开始新的一个循环。 <br><br> <br><br>Number <br><br> Math <br><br> 格式：number := Number(x)<br><br><br><br>说明：该函数将参数x转化为一个实型或整型的数值。<br><br><br><br>例如：Number(&quot;1a2b3c&quot;) 返回值为123。 <br><br> <br><br>NumCount <br><br> Character <br><br> 格式：number := NumCount(&quot;string&quot;)<br><br><br><br>说明：该函数返回在字符串string中数字的个数。例如：<br><br><br><br>NumberTotal := <br><br><br><br>NumCount(&quot;Greg11Peter22Bobby33Marcia44Ja <br><br> <br><br>　 　 n55Cindy66&quot;)<br><br><br><br>变量 NumberTotal 的值为 6。 <br><br> <br><br>OffsetRect <br><br> List <br><br> 格式：<br><br><br><br>NewRectangle := OffsetRect(rectangle, x, y)<br><br><br><br>说明：该函数的作用是按照rectangle的形状复制一个矩形，矩形的位置有源矩形的位置和参数x，y来决定，参数x，y是新矩形相对源矩形移动的位置，当x大于零时，新建矩形在源矩形的右边，当y大于零时，新建矩形在源矩形的下方。当参数小于零时，位置相反。 <br><br> <br><br>OLEDoVerb <br><br> OLE <br><br> 格式：<br><br><br><br>OLEDoVerb(IconID@&quot;IconTitle&quot; [, &quot;verb&quot;])<br><br><br><br>说明：该函数的作用是激活指定设计按钮中OLE对象的某项操作，该函数的操作仅对该设计按钮中包含的OLE对象有效，对其它对象无效。<br><br><br><br>OLE对象：指通过对象链接与嵌入技术而插入到设计按钮中的对象（如正文对象、或图形对象）。例如：我们要编辑标题为“背景”的【显示】设计按钮中的OLE对象，则可在一个【运算】设计按钮中输入函数“OLEDoVerb(背景&quot; , &quot;edit&quot;)”。 <br><br> <br><br>OLEGetObjectVerbs <br><br> OLE <br><br> 格式：<br><br><br><br>string := <br><br><br><br>OLEGetObjectVerbs(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数的作用是对指定的【显示】设计按钮中第一个OLE对象的具体操作以列表的形式返回，其中列表的第一个具体操作是缺省操作，每个操作名占列表中的一行。 <br><br> <br><br>OLEGetTrigger <br><br> OLE <br><br> 格式：<br><br><br><br>number := OLEGetTrigger(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数返回一个为激活OLE对象方式设置的数字标识，其数字的含义如下所述：<br><br><br><br>0：未设置激活方式；<br><br><br><br>1：单击鼠标激活方式；<br><br><br><br>2：双击鼠标激活方式。<br><br><br><br>所谓激活方式，是为让最终用户能激活一个OLE对象而设置的一个操作（单击或双击鼠标。 <br><br> <br><br>OLEGetTriggerVerb <br><br> OLE <br><br> 格式：<br><br><br><br>string := <br><br><br><br>OLEGetTriggerVerb(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数的作用是对指定【显示】设计按钮中第一个OLE对象设置的激活方式以列表的形式返回。 <br><br> <br><br>OLEIconize <br><br> OLE <br><br> 格式：OLEIconize(IconID@&quot;IconTitle&quot;, iconize)<br><br><br><br>说明：该函数的作用是设定将指定【显示】设计按钮中的第一个OLE以图标的形式来显示还是以全图的形式显示，参数iconize 的值为TRUE时，以图标的形式显示；参数iconize为FALSE时，以全图的形式显示。 <br><br> <br><br>OLESetAutoUpdate <br><br> OLE <br><br> 格式：OLESetAutoUpdate(IconID@&quot;IconTitle&quot;, update)<br><br><br><br>说明：该函数用来设置指定【显示】设计按钮中第一个链接OLE对象的链接关系是用什么方式来得到更新的，当参数update 为TRUE时，将自动更新，当update为FALSE时，则链接关系只能用户手工修改。 <br><br> <br><br>OLESetTrigger <br><br> OLE <br><br> 格式：OLESetTrigger(IconID@&quot;IconTitle&quot;, [trigger])<br><br><br><br>说明：该函数的作用是为激活OLE对象方式设置一个数字标识为参数trigger，其数字的含义如下所述：<br><br><br><br>0：未设置激活方式；<br><br><br><br>1：单击鼠标激活方式；<br><br><br><br>2：双击鼠标激活方式。 <br><br> <br><br>OLESetTriggerVerb <br><br> OLE <br><br> 格式：OLESetTriggerVerb(IconID@&quot;IconTitle&quot; [, &quot;verb&quot;])<br><br><br><br>说明：该函数的作用是为指定设计按钮中的第一个OLE对象设置一个具体的操作该OLE对象的激活方式是双击鼠标的操作。 <br><br> <br><br>OLEUpdateNow <br><br> OLE <br><br> 格式：OLEUpdateNow(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数的作用是更新指定设计按钮中的第一个OLE链接对象，如果是一个OLE嵌入对象，则该对象将被刷新。 <br><br> <br><br>Overlapping <br><br> Graphics <br><br> 格式：<br><br><br><br>condition := Overlapping(IconID@&quot;IconTitle&quot;, IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：如果两个IconTitle中的显示对象重叠 <br><br> <br><br>　 　 放置的话，该函数的返回值为TRUE。 <br><br> <br><br>PageContaining <br><br> Framework <br><br> 格式：<br><br><br><br>ID:=PageContaining(IconID@&quot;IconTitle&quot;[,@&quot;framework&quot;])<br><br><br><br>说明：当不使用参数framework时，该函数是返回指定页所对应设计按钮的ID标识，可以使用该参数指定【框架】结构的标题，当指定的页在【框架】结构中时，将返回该页所对应设计按钮的ID标识，否则返回0。 <br><br> <br><br>PageFoundID <br><br> Framework <br><br> 格式：ID := PageFoundID(n)<br><br><br><br>说明：当我们使用FindText（）函数来查找关键词或在正文后，该函数与该正文和关键词相匹配的正文对象所在的页的ID标识。当n=1时，该函数返回的是第一处匹配的正文对象所在页的ID标识。当n=2时，该函数返回的是第二处匹配的正文对象所在页的ID标识，其它依次类推。 <br><br> <br><br>PageFoundTitle <br><br> Framework <br><br> 格式：title := PageFoundTitle(n [,m])<br><br><br><br>说明：当我们使用FindText（）函数来查找关键词或在正文后，该函数与该正文和关键词相匹配的正文对象所在的设计按钮的标题。当没有参数m时，该函数返回的是第n处匹配的正文对象所在设计按钮的标题，当有参数m时，该函数返回的是从第n个匹配设计按钮到第m个匹配正文对象所有的设计按钮标题。 <br><br> <br><br>PageHistoryID <br><br> Framework <br><br> 格式：ID := PageHistoryID(n [,m])<br><br><br><br>说明：1：不使用参数m时，该函数返回的是最近显示页的设计按钮ID标识，n=1表示最近显示页，n=2表示最近显示页的前一页，其它依次类推。<br><br><br><br>2：当使用参数m时，该函数将返回在该范围内的所有显示页的ID标识，ID标识间以回车符分隔，最后一个ID标识用结束符“\0”来结尾。 <br><br> <br><br>PageHistoryTitle <br><br> Framework <br><br> 格式：title := PageHistoryTitle(n [,m])<br><br><br><br>说明：1：不使用参数m时，该函数返回的是最近显示页的设计按钮标题，n=1表示最近显示页，n=2表示最近显示页的前一页，其它依次类推。 <br><br> <br><br>　 　 2：当使用参数m时，该函数将返回在该范围内的所有显示页的标题，标题名间以回车符分隔，最后一个标题名用结束符“\0”来结尾 <br><br> <br><br>Point <br><br> List <br><br> 格式：MyPoint := Point(x, y)<br><br><br><br>说明：在屏幕坐标（x，y）上创建一个点。 <br><br> <br><br>PointInRect <br><br> List <br><br> 格式：result := PointInRect(rectangle, point)<br><br><br><br>说明：如果指定的点point在矩形rectangle内，该函数返回值为TRUE，否则为FALSE。 <br><br> <br><br>Preload <br><br> Icons <br><br> 格式：number := Preload(IconID@&quot;IconTitle&quot; [, option])<br><br><br><br>说明：将指定的设计按钮在中的图片、声音、数字化电影等对象预先调入内存，以便快速读取。 <br><br> <br><br>PressKey <br><br> General <br><br> 格式：PressKey(&quot;keyname&quot;)<br><br><br><br>说明：当在该函数中指定一个键盘按键名后，Authorware执行该函数的效果同最终用户在键盘上按下指定的按键的功能相同。 <br><br> <br><br>PrintScreen <br><br> General <br><br> 格式：PrintScreen()<br><br><br><br>说明：将当前屏幕上显示的对象直接从设定的打印机上打印输出。 <br><br> <br><br>PropertyAtIndex <br><br> List <br><br> 格式：Property := PropertyAtIndex(propList, index)<br><br><br><br>说明：该函数返回在具有属性的列表中选择由index所指定的元素：例如：<br><br><br><br>PropList := [#a:77, #b:88, #c:99]<br><br><br><br>Property := PropertyAtIndex(PropList, 1)<br><br><br><br>Property 的值为 #a。 <br><br> <br><br>PurgePageHistory <br><br> Framework <br><br> 格式：PurgePageHistory()<br><br><br><br>说明：该函数的功能是将展示窗口中所有已显示的页的内容全部删除。 <br><br> <br><br>Quit <br><br> General <br><br> 格式：Quit([option])<br><br><br><br>说明：该函数的功能是使Authorware直接退出演示过程。Option参数的数字含义如下所述：<br><br><br><br>0：返回到Authorware窗口；<br><br><br><br>1：返回到Windows环境，如果在演示过程中是从一个文件跳转到另一个文件，将返回到先前的文件；<br><br><br><br>2：返回到DOS环境。 <br><br> <br><br>QuitRestart <br><br> General <br><br> 格式：QuitRestart([option])<br><br><br><br>说明：该函数是使Authorware退出展示过程返回DOS或Windows环境以后，重新开始运行当前的交互作用应用程序。 <br><br> <br><br>Random <br><br> Math <br><br> 格式：number := Random(min, max, units)<br><br><br><br>说明：该函数产生范围在min 之间max，小数点后类似units的随机数。 <br><br> <br><br>ReadExtFile <br><br> File <br><br> 格式：string := ReadExtFile(&quot;filename&quot;)<br><br><br><br>说明：该函数的作用是读取文件filename中的内容，并将该内容赋给变量string。 <br><br> <br><br>Real <br><br> Math <br><br> 格式：realNum := Real(x)<br><br><br><br>说明：将参数x转化为实型。 <br><br> <br><br>Rect <br><br> List <br><br> 格式：MyRect := Rect(value1, value2, value3, value4)<br><br><br><br>MyRect := Rect(point, point)<br><br><br><br>说明：利用指定的值或点来绘制矩形。 <br><br> <br><br>Reduce <br><br> Character <br><br> 格式：resultString := Reduce(&quot;set&quot;, &quot;string&quot;)<br><br><br><br>说明：该函数的功能是使字符串string进行简化，简化的方法是按照set所指定的字符或字符串将string相应的字符或字符串取出，然后将剩余的字符串的值赋给变量resultString。<br><br><br><br>例如：<br><br><br><br>result := Reduce(&quot; &quot;,&quot;The rain in Spain&quot;)<br><br><br><br>该函数返回的值为：&quot;The rain in Spain&quot;. <br><br> <br><br>RenameFile <br><br> File <br><br> 格式：number := RenameFile(&quot;filename&quot;, &quot;newfilename&quot;)<br><br><br><br>说明：该函数的功能是将文件filename更名为newfilename <br><br> <br><br>Repeat With, Repeat With x In list, Repeat While <br><br> Language <br><br> 格式：repeat with counter := start [down] to finish<br><br><br><br>statement(s)<br><br><br><br>end repeat<br><br><br><br>repeat with element in anyList<br><br><br><br>statement(s)<br><br><br><br>end repeat<br><br><br><br>repeat while condition<br><br><br><br>statement(s)<br><br><br><br>end repeat<br><br><br><br>说明：循环控制语句 <br><br> <br><br>RepeatString <br><br> Character <br><br> 格式：resultString := RepeatString(&quot;string&quot;, n)<br><br><br><br>说明：将字符串string重复n次，赋值给字符串变量resultString。<br><br><br><br>例如：<br><br>String := RepeatString(&quot;01&quot;,3)<br><br><br><br>String 为 &quot;010101&quot;. <br><br> <br><br>Replace <br><br> Character <br><br> 格式：<br><br><br><br>resultString := <br><br><br><br>Replace(&quot;pattern&quot;,&quot;replacer&quot;,&quot;string&quot;)<br><br><br><br>说明：该函数的作用是用replacer字符串来代替字符串string中的pattern字符串。 <br><br> <br><br>ReplaceLine <br><br> Character <br><br> 格式：Result := ReplaceLine(&quot;string&quot;, n, &quot;newstring&quot;[, delim])<br><br><br><br>说明：以字符串newstring来替换string字符串中的第n行。 <br><br> <br><br>ReplaceSelection <br><br> Icons <br><br> 格式：ReplaceSelection([IconID@&quot;IconTitle&quot;])<br><br><br><br>说明：该函数的目的是将对一个设计按钮的选择信息放回到存储区内。如果IconTitle为一个附属于【判定】设计按钮的一个设计按钮，则将该设计按钮中选择的信息送存储区；如果IconTitle为一个【判定】设计按钮，则附属于该设计按钮中选择的信息全部被放回存储区中。 <br><br> <br><br>ReplaceString <br><br> Character <br><br> 格式：<br><br><br><br>resultString := <br><br><br><br>ReplaceString(&quot;originalString&quot;,start, length,&quot;replacement&quot;)<br><br><br><br>说明：使用replacement 来替换originalString中的字符串。<br><br><br><br>例如：<br><br><br><br>Newstring := ReplaceString(&quot;I like you&quot;,3,4,&quot;really adore&quot;)<br><br><br><br>字符串&quot;I like you&quot; 转化为 &quot;I really adore you&quot;。<br><br><br><br>空格也计算在内。 <br><br> <br><br>ReplaceWord <br><br> Character <br><br> 格式：resultString := ReplaceWord(&quot;word&quot;, &quot;replacer&quot;, &quot;string&quot;)<br><br><br><br>说明：使用replacer来替换string中的Word成本。在该函数在中，可以使用通配符“*” <br><br> <br><br>ResizeWindow <br><br> General <br><br> 格式：ResizeWindow(width, height)<br><br><br><br>说明：重新设置展示窗口的大写。 <br><br> <br><br>ResumeFile <br><br> Jump <br><br> 格式：ResumeFile([&quot;recfolder&quot;])<br><br><br><br>说明：该函数的功能是使Authorware由响应Quit(1), Quit(2), 或 Quit(3)函数退出交互式应用程序后重新从退出的地方向下运行。该函数只有选中【File】【Properties】对话框中的【Resume】选项后才有效。<br><br><br><br>Authorware要重新返回它退出的地方，必须能找到用户信息的记录文件，如果存放该文件的目录不是缺省目录，必须使用参数recfolder来指定该文件夹或文件名。 <br><br> <br><br>ResumeFileName <br><br> Jump <br><br> 格式：ResumeFileName([&quot;recfolder&quot;])<br><br><br><br>说明：当Authorware由响应Quit(1), Quit(2), 或 Quit(3)函数退出交互式应用程序时，该函数的返回值为存储用户信息的记录文件的文件名，如果该文件不是存储在默认的目录中，我们需要使用参数recfolder来指定该文件的文件夹。当没有要重返的文件时，该函数的返回值为一个空的字符串。 <br><br> <br><br>RFind <br><br> Character <br><br> 格式：number := RFind(&quot;pattern&quot;, &quot;string&quot;)<br><br><br><br>说明：该函数的作用是在string字符串中寻找到的最后一个pattern所指定的字符串的位置。如果没有寻找到，该函数返回值为0。 <br><br> <br><br>RGB <br><br> Graphics <br><br> 格式：RGB(red, green, blue)<br><br><br><br>说明：该函数的作用是将红色（R）、绿色（G）、蓝色（B）的颜色值合成为单一的颜色值。<br><br><br><br>其中：red 、green、blue为三种颜色的颜色值，颜色值的范围为0～255。该函数只能用在【运算】设计按钮中，用于为函数Box()、Circle（）等绘图函数来设置颜色。当为这些绘图函数设置颜色的时候，该函数必须位于这些包含有这些绘图函数的设计按钮之前。 <br><br> <br><br>Round <br><br> Math <br><br> 格式：number := Round(x [, decimals])<br><br><br><br>说明：该函数按照decimals设定的小数位数来实现四舍五入的算法。 <br><br> <br><br>SaveRecords <br><br> General <br><br> 格式：SaveRecords()<br><br><br><br>说明：该函数将用户的信息保存在磁盘上，当用户退出一个文件后，Authorware自动地执行保存功能。 <br><br> <br><br>SendEventReply <br><br> General <br><br> 格式：SendEventReply(event, reply)<br><br><br><br>说明：对由Xtras发出的事件发送一个回应。 <br><br> <br><br>SetAtIndex <br><br> List <br><br> 格式：SetAtIndex(anyList, value, index)<br><br><br><br>说明：该函数用来替换指定列表中指定位置的元素的值。<br><br><br><br>例如：<br><br><br><br>numList := [10, 20, 30]<br><br><br><br>SetAtIndex(numList, 90, 1)<br><br><br><br>numList 的结果为：[90, 20, 30]<br><br><br><br>numList := [10, 20, 30]<br><br><br><br>SetAtIndex(numList, 90, 6)<br><br><br><br>numList 的结果为： [10, 20, 30, 0, 0, 90] <br><br> <br><br>SetCursor <br><br> General <br><br> 格式：SetCursor(type)<br><br><br><br>说明：该函数的作用是设定鼠标指针的具体形状：参数type不同的值，其响应鼠标形状为：<br><br><br><br>SetCursor(0) 箭头<br><br><br><br>SetCursor(1) “I”形<br><br><br><br>SetCursor(2) 双箭头形状<br><br><br><br>SetCursor(3) 加号形状<br><br><br><br>SetCursor(4) 方块<br><br><br><br>SetCursor(5) 沙漏形状 (Windows)<br><br><br><br>SetCursor(6) 手的形状 <br><br> <br><br>SetFill <br><br> Graphics <br><br> 格式：SetFill(flag [, color])<br><br><br><br>说明：该函数的功能是用RGB（）所设定的颜色来填充有绘图函数绘制的图片，当flag=TRUE时填充，否则不填充。 <br><br> <br><br>SetFrame <br><br> Graphics <br><br> 格式：SetFrame(flag [, color])<br><br><br><br>说明：该函数用来设置有绘图函数绘制的图形的边框。 <br><br> <br><br>SetIconProperty <br><br> General <br><br> 格式：<br><br><br><br>SetIconProperty(IconID@&quot;SpriteIconTitle&quot;, #property, value)<br><br><br><br>说明：该函数用来设置sprite icon's asset.的属性值，该值可以通过GetIconProperty函数来取得。 <br><br> <br><br>SetKeyboardFocus <br><br> General <br><br> 格式：SetKeyboardFocus(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数将当前的焦点放置到指定的sprite 设计按钮, 正文输入响应， Director 电影设 <br><br> <br><br>　 　 计按钮等。 <br><br> <br><br>SetLine <br><br> Graphics <br><br> 格式：SetLine(type)<br><br><br><br>说明：该函数的功能是实现直线的绘制。<br><br><br><br>0 没有箭头；<br><br><br><br>1 起始箭头；<br><br><br><br>2 终止箭头；<br><br><br><br>3 两端箭头都要。 <br><br> <br><br>SetMode <br><br> Graphics <br><br> 格式：SetMode(mode)<br><br><br><br>说明：选择显示对象的显示模式：<br><br><br><br>mode变量的实现过程：<br><br><br><br>0 Matted<br><br><br><br>1 Transparent<br><br><br><br>2 Inverse<br><br><br><br>3 Erase<br><br><br><br>4 Opaque <br><br> <br><br>SetPalette <br><br> Graphics <br><br> 格式：result := SetPalette([&quot;filename&quot;, option])<br><br><br><br>说明：该函数用来从文件filename中读取调色板，然后将该调色板设定为当前展示窗口使用的调色板。<br><br><br><br>0 = 使用以前的设置；<br><br><br><br>1 = 不保留系统颜色；<br><br><br><br>2 = 使用未修改的调色板；<br><br><br><br>4 = 保留系统颜色；<br><br><br><br>8 = 使用Modify &gt; File &gt; Palette的设置。 <br><br> <br><br>SetProperty <br><br> Platform <br><br> 格式：SetProperty(&quot;window&quot;, #property, value)<br><br><br><br>说明：该函数用于设置指定窗口的特征值。Window参数表示由XCMD或UCD（DLL）生成的窗口名。 <br><br> <br><br>SetSpriteProperty <br><br> General <br><br> 格式：<br><br><br><br>SetSpriteProperty(IconID@&quot;SpriteIconTitle&quot;, #property, value)<br><br><br><br>说明：设置由sprite设计按钮当前显示的sprite的属性的值。 <br><br> <br><br>ShowCursor <br><br> General <br><br> 格式：ShowCursor(display)<br><br><br><br>说明：该函数的功能是显示或隐藏鼠标，参数display为ON时，显示鼠标，参数display为OFF时，隐藏鼠标。 <br><br> <br><br>ShowMenuBar <br><br> General <br><br> 格式：ShowMenuBar(display)<br><br><br><br>说明：该函数用于显示或隐藏展示窗口中的用户菜单。 <br><br> <br><br>　 　 该函数仅能在【运算】设计按钮中使用，不能作为装饰或在表达式中使用。 <br><br> <br><br>ShowTaskBar <br><br> General <br><br> 格式：ShowTaskBar(display)<br><br><br><br>说明：该函数的功能是显示或隐藏用户任务栏，要显示用户任务栏，将display设置为ON，否则设置为OFF。<br><br><br><br>该函数仅能在【运算】设计按钮中使用，不能作为装饰或在表达式中使用。 <br><br> <br><br>ShowTitleBar <br><br> General <br><br> 格式：ShowTitleBar(display)<br><br><br><br>说明：该函数的功能是显示或隐藏用户的标题栏，要显示用户的标题栏，将display设置为ON，否则设置为OFF。<br><br><br><br>该函数仅能在【运算】设计按钮中使用，不能作为装饰或在表达式中使用。 <br><br> <br><br>Sign <br><br> Math <br><br> 格式：number := Sign(x)<br><br><br><br>说明：当x为负时，该函数返回值为－1；<br><br><br><br>当x为0时，该函数返回值为0；<br><br><br><br>当x为正时，该函数返回值为1； <br><br> <br><br>SIN <br><br> Math <br><br> 格式：number := SIN(angle)<br><br><br><br>说明：该函数取角度的正弦值。 <br><br> <br><br>SortByProperty <br><br> List <br><br> 格式：SortByProperty(propertyList1[, propList2,..., propList10][, order])<br><br><br><br>说明：将属性列表按照属性和标记作为标准来排序，将参数order设置为TRUE时，对列表进行升序排列，当order设置为FALSE时，对列表进行降序排列。<br><br><br><br>例如：<br><br><br><br>ListA:=[#z:1, #x:2, #y:3]<br><br><br><br>ListB:=[#a:1, #c:2, #b:3]<br><br><br><br>SortByProperty(ListA, ListB, TRUE)<br><br><br><br>ListA 的值为：[#x:2, #y:3, #z:1] <br><br><br><br>ListB 的值为：[#c:2, #b:3, #a:1]. <br><br> <br><br>SortByValue <br><br> List <br><br> 格式：<br><br><br><br>SortByValue(anyList1 [, anyList2, ..., anyList10], [order])<br><br><br><br>说明：该函数的作用同上一函数的作用基本相同，对列表中的元素按照它们的值和标记来进行排序分类，将参数order设置为TRUE时，对列表进行升序排列，当order设置为FALSE时，对列表进行降序排列 <br><br> <br><br>SQRT <br><br> Math <br><br> 格式：number := SQRT(x)<br><br><br><br>说明：该函数返回参数x的平方根。 <br><br> <br><br>string <br><br> Character <br><br> 格式：string := String(x)<br><br><br><br>说明：该函数将x由当前值转化为字符串。 <br><br> <br><br>Strip <br><br> Character <br><br> 格式：resultString := Strip(&quot;characters&quot;, &quot;string&quot;)<br><br><br><br>说明：该函数的作用是将字符串string中由character指定的字符或字符串删除后返回。<br><br><br><br>例如：下面函数的目的是实现只取得字符串中的数字：<br><br><br><br>EverythingButNumbers := Strip(&quot;1234567890&quot;, EntryText)<br><br><br><br>JustTheNumbers := <br><br><br><br>Strip(EverythingButNumbers, EntryText) <br><br> <br><br>SubStr <br><br> Character <br><br> 格式：resultString := SubStr(&quot;string&quot;, first, last)<br><br><br><br>说明：该函数的功能是在字符串string中取出一个子字符串，字符串的值有first和last参数决定。例如：<br><br><br><br>phone number:=&quot;4155551212&quot;<br><br><br><br>area code := SubStr(phone number,1,3)<br><br><br><br>area code的值为415。 <br><br> <br><br>Sum <br><br> Math <br><br> 格式：value := Sum(anyList)<br><br><br><br>value := Sum(a [, b, c, d, e, f, g, h, i, j])<br><br><br><br>说明：该函数返回列表中或各参数（最多10个）的值的累加。例如<br><br><br><br>List := [10, 20, 30]<br><br><br><br>TotalValue := Sum(List)<br><br><br><br>其值为60。 <br><br> <br><br>Symbol <br><br> Character <br><br> 格式：symbol := Symbol(value)<br><br><br><br>说明：该函数将给定的value的当前值转化为一个符号。例如：<br><br><br><br>propVar := &quot;a&quot;<br><br><br><br>propList := [Symbol(propVar):1]<br><br><br><br>propList 的值为 [#a:1] <br><br> <br><br>SyncPoint,<br><br><br><br>SyncWait <br><br> General <br><br> 格式：SyncPoint(option)<br><br><br><br>SyncWait(seconds)<br><br><br><br>说明：这两个函数是相互配合起来使用，<br><br><br><br>SyncWait(seconds) 用来设置一个等待时间，seconds为等待时间的秒值。在等待的时间范围内，所有的交互作用响应均暂时不能使用，当如数字化电影、动画及其它操作仍然可以 <br><br> <br><br>　 　 继续。SyncPoint(option)用于设定在何时对<br><br><br><br>SyncWait(seconds)函数设置的等待时间进行计时。参数option的含义如下所述：<br><br><br><br>0：表示在当前显示设计按钮显示按钮中的内容前开始计时。<br><br><br><br>1：表示在显示当前设计按钮中的内容后开始计时。<br><br><br><br>2：表示在用户匹配一个响应或退出一个交互作用分支结构时，开始计时（该数字标识仅用于交互作用分支结构）。 <br><br> <br><br>TAN <br><br> Math <br><br> 格式：number := TAN(angle)<br><br><br><br>说明：该函数返回角度angle的正切值。 <br><br> <br><br>Test <br><br> General <br><br> 格式：Test(condition, true expression [, false expression])<br><br><br><br>说明：该函数的功能是，当condition的值为TRUE时，Authorware计算true expression中的表达式，当condition的值为FALSE时，Authorware计算false expression中的表达式。<br><br><br><br>例如：<br><br><br><br>Test(Score&lt;50, path:=1, path:=2)<br><br><br><br>如果Score小于50，则为path赋值为1，否则赋值为2。 <br><br> <br><br>TestPlatform <br><br> Platform <br><br> 格式：string := TestPlatform(Mac, Win32 [, Win16])<br><br><br><br>说明：该函数返回应用程序所运行的平台信息。 <br><br> <br><br>TextCopy, <br><br> General <br><br> 格式：TextCopy()<br><br><br><br>说明：该函数的作用是将当前选中的正文复制到剪贴板中。 <br><br> <br><br>TextCut <br><br> General <br><br> 格式：TextCut()<br><br><br><br>说明：该函数的作用是将当前选中的正文剪贴到剪贴板中。 <br><br> <br><br>TextPaste <br><br> General <br><br> 格式：TextPaste()<br><br><br><br>说明：该函数的作用是将剪贴板中的内容粘贴到当前激活的正文对象中。 <br><br> <br><br>TimeOutGoTo <br><br> Jump <br><br> 格式：TimeOutGoTo(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数要同函数TimeOutLimit来同时使用，用来监测最终用户的响应操作（按键、单击鼠标、双击鼠标、拖动鼠标等）。如果在TimeOutLimit的时间内，最终用户还没有实 <br><br> <br><br>　 　 施任何响应操作，则Authorware将跳转到由TimeOutGoTo函数所指定的设计按钮中来执行。 <br><br> <br><br>Trace <br><br> General <br><br> 格式：Trace(&quot;string&quot;)<br><br><br><br>说明：该函数的作用是帮助程序的调试，该函数在独立的【运算】设计按钮中使用，我们可以在要调试的设计按钮前加上一个【运算】设计按钮，并在该设计按钮中输入该函数，当Authorware遇到该函数时，会自动跳出跟踪窗口，同时，参数string所设定的字符串会出现在窗口中。 <br><br> <br><br>TypeOf <br><br> General <br><br> 格式：Type: := TypeOf(value)<br><br><br><br>说明：该函数返回参数value的类型。<br><br><br><br>参数的类型有如下所述几种：<br><br><br><br>#integer ; #real; #string ; #linearList; #propList ; #rect; #point; #symbol; #event<br><br><br><br>例如：<br><br><br><br>TypeOf([1, 2, 3]) 返回值为：#linearList.<br><br><br><br>TypeOf(#a) 返回值为： #symbol.<br><br><br><br>TypeOf(&quot;abc&quot;) 返回值为： #string. <br><br> <br><br>UnionRect <br><br> List <br><br> 格式：NewRect := UnionRect(rectangle1, rectangle2)<br><br><br><br>说明：该函数返回在矩形rectangle1, rectangle2中最小的一个。 <br><br> <br><br>Unload <br><br> Icons <br><br> 格式：Unload(IconID@&quot;IconTitle&quot;)<br><br><br><br>说明：该函数的作用是将IconTitle所指定的设计按钮中的内容从内存中移出。 <br><br> <br><br>UpperCase <br><br> Character <br><br> 格式：resultString := UpperCase(&quot;string&quot;)<br><br><br><br>说明：该函数的作用是将string中所有的字母转化为大写字母。<br><br><br><br>例如：NewText := UpperCase(&quot;all caps&quot;)<br><br><br><br>NewText的值为ALL CAPS。 <br><br> <br><br>ValueAtIndex <br><br> List <br><br> 格式：ValueAtIndex(anyList, index)<br><br><br><br>说明：该函数返回指定列表中指定位置的值。<br><br><br><br>例如：<br><br><br><br>List := [10, 20, 30]<br><br><br><br>PropList := [#a:77, #b:List, #c:99]<br><br><br><br>Value := ValueAtIndex(PropList, 1)<br><br><br><br>Value 的在值为 77。<br><br><br><br>Value := ValueAtIndex(PropList, 2) <br><br> <br><br>　 　 Value 的值为 [10, 20, 30]. <br><br> <br><br>VideoChromaKey <br><br> Video <br><br> 格式：VideoChromaKey(red, green, blue)<br><br><br><br>说明：该函数为视频重叠设备设置chroma 关键颜色。 <br><br> <br><br>VideoDisplay <br><br> Video <br><br> 格式：VideoDisplay(show)<br><br><br><br>说明：该函数来控制视频的播放，当show为ON时，在显示当前视频设备上的显示对象，当show为OFF时，则停止播放当前视频设备上的内容。 <br><br> <br><br>VideoPause <br><br> Video <br><br> 格式：VideoPause()<br><br><br><br>说明：该函数的作用是在当前帧暂停视频播放。 <br><br> <br><br>VideoPlay <br><br> Video <br><br> 格式：VideoPlay(frame)<br><br><br><br>说明：该函数是从指定的帧开始播放视频信息。 <br><br> <br><br>VideoSeek <br><br> Video <br><br> 格式：VideoSeek(frame)<br><br><br><br>说明：该函数的作用是设置当前视频播放的帧数，使Authorware直接定位该帧的图像。 <br><br> <br><br>VideoSend <br><br> Video <br><br> 格式：string := VideoSend(&quot;message&quot;, wait)<br><br><br><br>说明：该函数将message参数中的信息发送到视频播放设备中，然后等待参数wait数值中所指定的多少个时间段，每一个时间段的时间为60分之一秒。 <br><br> <br><br>VideoSound <br><br> Video <br><br> 格式：VideoSound(channel, play)<br><br><br><br>说明：该函数控制视频声音的播放：<br><br><br><br>数字参数channel来控制声道的播放：各数字的含义如下所述：<br><br><br><br>1 声道1 <br><br><br><br>2 声道2 <br><br><br><br>双声道。 <br><br>参数play控制声音的播放：<br><br><br><br>play 设置为 ON 播放声音，为 OFF，不播放声音。 <br><br> <br><br>VideoSpeed <br><br> Video <br><br> 格式：VideoSpeed(speed)<br><br><br><br>说明：该函数用来控制视频的播放：参数speed各数值的含义如下所述：<br><br><br><br>0 Pause 1 Slowest<br><br><br><br>2 Slow 3 Normal <br><br><br><br>4 Fast <br><br><br><br>5 Fastest <br><br> <br><br>VideoStep <br><br> Video <br><br> 格式：VideoStep(reverse)<br><br><br><br>说明：该函数控制视频的单帧向前或向后播放。<br><br><br><br>向前播放，参数reverse设置为OFF，向后播放参数reverse设置为ON。 <br><br> <br><br>VideoText <br><br> Video <br><br> 格式：VideoText(&quot;string&quot;, n)<br><br><br><br>说明：该函数使用视盘播放器在第n行播放string字符串中的信息。并非所有的视盘播放设备支持该函数，如果不支持，Authorware将忽略该函数。 <br><br> <br><br>WaitMouseUp <br><br> General <br><br> 格式：WaitMouseUp()<br><br><br><br>说明：该函数暂停展示窗口中的内容，直到用户松开鼠标左键为止。 <br><br> <br><br>WordCount <br><br> Character <br><br> 格式：number := WordCount(&quot;string&quot;)<br><br><br><br>说明：该函数返回字符串string单词的个数。<br><br><br><br>例如：<br><br><br><br>TotalWords := WordCount(&quot;Aries Taurus Gemini&quot;)<br><br><br><br>TotalWords 的值为 3；<br><br><br><br>TotalWords := WordCount(&quot; ( . # &amp; ! &quot;)<br><br><br><br>TotalWords 的值为 5；<br><br><br><br>TotalWords := WordCount(&quot;one\rtwo\rthree&quot;)<br><br><br><br>TotalWords 的值为 3。 <br><br> <br><br>WriteExtFile <br><br> File <br><br> 格式：number := WriteExtFile(&quot;filename&quot;, &quot;string&quot;)<br><br><br><br>说明：该函数的作用是将字符串string中的内容写入由filename所在指定的文件中。 <br><br> <br><br>Year <br><br> Time <br><br> 格式：number := Year(number)<br><br><br><br>说明：number为当前时间距离1900年1月1日的天数，使用该参数，返回number所距离天数所在的年。Number值的范围为：25568 到 49709 (January 1, 1970 到 June 2, 2036)<br><br><br><br>例如：<br><br><br><br>result := Year(25568)<br><br><br><br>result 的值为1970。 <br><br> <br><br>ZoomRect <br><br> General <br><br> 格式：ZoomRect(x, y)<br><br><br><br>说明：该函数的作用是使Authorware从（x,y）点到显示对象的边缘产生变焦距显示的效果。 <br><br> 
</td></tr>
</table>
<hr>

<p align="right">

20001109210205
<div align="center"><a href="xw/xwpl.asp?id=494">我来说两句</a></div>
</body> 
 
</html> 
