<html>

<head>
<style type="text/css">
<!--
.ourfont{font-size: 12px;line-height: 17px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: "#54646D"}
A:active {text-decoration: none}
A:hover {text-decoration: underline; color: 000080} 
-->
</style>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>《电脑报》</title>
</head>

<body bgcolor="#FFFFFF">

<hr align="center" width="700">
<div align="center"><center>

<table border="0" width="700" cellspacing="0" cellpadding="4" bgcolor="#ECF7F4">
  <tr>
    <td width="100%" valign="top"><div align="center"><center><table border="0" width="680"
    cellspacing="0" cellpadding="4">
      <tr>
        <td width="672" valign="top"><p align="center"><font face="黑体" color="#004080"><strong>　VC是一个好东西 
        <br>
        </strong></font></td>
      </tr>
      <tr>
        <td width="672" valign="top"><p class="ourfont" align="left"><font color="#369681">　<strong>　</strong>我曾向师兄们请教“干活”用什么工具好，皆曰VC(Visual 
        C)。我以前编程都用BC(Borland C)，所以并不知VC到底是个什么东西，但从师兄对其推崇备至的神情中我能感觉到VC肯定错不了!现在微软的东西是主流产品，不掌握是不行的，更何况有经验丰富的师兄相助，还是学一学吧!<br>
        　　但万事开头难。当我满怀信心地初次进入VC5.0的Microsoft Developer 
        Studio时，面对的却是非常陌生的菜单，什么Project、Workspace都是我以前没接触过的，试着像在BC中那样打开一个新文件时，它却跳出一个菜单问我想打开一些什么莫名其妙的东西，哎呀，这都是什么呀，再看别的菜单条也不知所云，算了算了。就这样犹豫了几回，终究没有一点进步。<br>
        　　后来多亏“老板”指点，曰学东西一要耐心，二要有好书相助，去买几本书吧。经广泛征求意见，我选中一本VC5.0的入门图解，回来一看，嘿，顿时眼界大开，原来如此。于是一连几天泡在机房里，学得痛快淋漓，总算把VC认识了。后又得师兄相助，有了进一步认识，于是终日摩拳擦掌，欲一显身手。<br>
        　　机会来啦，我们有一门课需要编程作业，终于可以小试牛刀啦!打开VC5.0，利用Classwizard 
        生成一个基本框架，没写自己的代码之前先把程序运行了好几遍，爽一爽!然后再一步一步分类编写代码，心想这回可以看一下自己的杰作了。哪知一编译却冒出来五十多个错误，赶快，别让别人看见，自己偷偷地修改了一阵子，终于没有编译错误了，运行一下吧，半天没反映。回到原程序查一遍，发现几个小错误，再运行一遍还是不行。就这样一直用了我一个多月的业余时间，还是没有搞定，无奈之下请高人帮忙。这回眼界又大开了一次，人家运行调试排错，先找个已知结果的例子，一步一步跟踪，这地方应该怎样不应怎样，没几个小时就解决了问题。这时我才知道VC5.0还有如此强大的调试功能。没办法，只有继续努力啦!<br>
        　　初学习VC，有失落也有收获，感触颇多，不妨说来与大家共享：<br>
        　　●当你选择一种新的编程工具时，一定要先把它的大致功能和优缺点弄清楚，例如它在哪方面特别强大，适合用来完成什么工作，以及作为一门语言它的发展前景怎样，这样你才能很好地利用它。<br>
        　　●如果你先找一个懂行的人给你讲解一下，那只会加快你的工作进度。<br>
        　　●拿到任务时首先要作个整体分析，结合语言的特点，对工作过程有个初步打算。<br>
        　　●下一步要编译链接，发现并排除语法错误，再试着运行一次，能执行则好(无论你是何等高手，一次通过的情况并不多见)，否则你就可以进一步体会VC的妙处——调试。<br>
        　　●如果你的程序中用到了指针，你要特别小心，指针很容易出错，弄不好会死机，造成不必要的损失。<br>
        　　●最关键一点，不要想着把所有问题都交给电脑去完成，它毕竟只是个工具，要发挥你的聪明才智，让它更好地为你工作。<strong>(湖南 
        聂洪山)<br>
        </strong></font></p>
        <p align="right"><span class="ourfont"><font color="#369681">本文出自：</font><a
        href="index.htm">《电脑报》1998年27月27日第27期9版</a></span></td>
      </tr>
    </table>
    </center></div></td>
  </tr>
</table>
</center></div>
</body>
</html>
