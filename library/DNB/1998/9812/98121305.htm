<html>

<head>
<style type="text/css">
<!--
.ourfont{font-size: 12px;line-height: 17px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: "#54646D"}
A:active {text-decoration: none}
A:hover {text-decoration: underline; color: 000080} 
-->
</style>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>《电脑报》</title>
</head>

<body bgcolor="#FFFFFF">

<hr align="center" width="700">
<div align="center"><center>

<table border="0" width="700" cellspacing="0" cellpadding="4" bgcolor="#ECF7F4">
  <tr>
    <td width="100%" valign="top"><div align="center"><center><table border="0" width="680"
    cellspacing="0" cellpadding="4">
      <tr>
        <td width="672" valign="top"><p align="center"><font color="#004080" face="黑体"><strong>结构化设计方法<br>
        </strong></font></td>
      </tr>
      <tr>
        <td width="672" valign="top"><p class="ourfont" align="left"><font color="#369681"><font
        face="楷体_GB2312">　　</font>所谓结构化设计方法是以模块化设计为中心，将待开发的软件系统划分为若干个相互独立的模块(在许多程序设计语言中的一些子程序、分程序、过程和函数等都有模块的特性，这些特性包括模块的名字、输入和输出信息、可被调用以及可调用其它模块等)，这样使完成每一个模块的工作变单纯而明确，为设计一些较大的软件打下了良好的基础。当我们在处理其中的一个模块时，不会受到其它模块的牵连，因而可将原来较为复杂的问题大为简化。模块的独立性还为扩充已有的系统、建立新系统带来了不少的方便，因为我们可以充分利用现有的模块作积木式的扩展。所以说使用结构化设计方法，不但提高了程序的质量，而且也增强了程序的可读性和可修改性。</font></p>
        <p align="right"><span class="ourfont"><font color="#369681">本文出自：</font><a
        href="index.htm">《电脑报》1998年3月30日第12期13版</a></span></td>
      </tr>
    </table>
    </center></div></td>
  </tr>
</table>
</center></div>
</body>
</html>
